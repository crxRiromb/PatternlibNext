// THIS FILE IS AUTO-GENERATED BY THE WRAPPER-GENERATOR SCRIPT. DO NOT EDIT.

import {
  Component,
  ChangeDetectionStrategy,
  Input,
  Output,
  EventEmitter,
  ElementRef,
  ViewChild,
  AfterViewInit,
  OnDestroy,
  CUSTOM_ELEMENTS_SCHEMA,
  booleanAttribute,
} from "@angular/core";
import type { PlItemlist } from "@liebherr2/plnext";

@Component({
  selector: "pl-itemlist-angular",
  standalone: true,
  template: `
    <pl-itemlist
      #elementRef
      [attr.headline-label]="_headlineLabel"
      [data]="data"
    >
      <ng-content></ng-content>
    </pl-itemlist>
  `,
  styles: [":host { display: inline-block; }"],
  changeDetection: ChangeDetectionStrategy.OnPush,
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
})
export class PlItemlistAngular implements AfterViewInit, OnDestroy {
  @ViewChild("elementRef") elementRef!: ElementRef<PlItemlist>;
  private _listenerCtl = new AbortController();

  // --- Inputs (simple attributes) ---

  protected _headlineLabel: string = "";
  /** Maps to the "headline-label" string attribute. */
  @Input()
  set headlineLabel(value: string | null | undefined) {
    this._headlineLabel = (value ?? "") as string;
  }
  get headlineLabel(): string {
    return this._headlineLabel;
  }

  // --- Inputs (complex properties) ---

  /** Complex property "data" (set as DOM property, not attribute). */
  @Input() data: { key: string; value: string }[] = [];

  // --- Outputs ---

  // --- Lifecycle hooks ---
  ngAfterViewInit() {
    const nativeElement = this.elementRef.nativeElement;
  }

  ngOnDestroy() {
    this._listenerCtl.abort();
  }
}
